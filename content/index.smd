---
.title = "Homepage",
.date = @date("1990-01-01T00:00:00"),
.author = "Sample Author",
.layout = "index.shtml",
.draft = false,
--- 

This sample website showcases:

- A couple simple pages
  - `content/index.smd`
  - `content/about.smd`
- A blog
  - `content/blog/index.smd`
  - `content/blog/first-post/index.smd`
  - `content/blog/second-post.smd`
- A devlog 
  - `content/devlog/index.smd`
  - `content/devlog/1990.smd`
  - `content/devlog/1989.smd`



## About Devlogs

While a blog has each entry be a separate page, a devlog is one single page with
a list of smaller entries in it, making it a form of microblogging. The relative
RSS feed will generate a separate item per devlog entry, creating a
"twitter-like" feed.

This can be a useful pattern for thoughts that are too small for a full blog post
so consider giving it a try!

The name "devlog" comes from the fact that this kind of microblogging feed works
well when you have an open source project and you want to give small updates to
your users, but it might work equally well for other domains, depending on your
interests and audience. Maybe a "foodlog", a "catlog" or a "treklog" could also
work well.

The devlog section contains more information about how devlogs can be implemented
in Zine.

Some examples of devlogs in the wild:
 - https://zine-ssg.io/log/
 - https://ziglang.org/devlog/


## Next steps

Make sure to read the [official Zine docs](https://zine-ssg.io/docs/)
and then start editing this website!

Start by putting the correct information in `zine.ziggy` and then start editing
the existing pages. Before deleting existing copy consider giving it a brief
look as it will show you some SuperMD specific syntax.

HTML markup in Zine is defined via SuperHTML templates:
- `layouts/index.shtml`
- `layouts/page.shtml`
- `layouts/post.shtml`
- `layouts/blog.shtml`
- `layouts/blog.xml`
- `layouts/devlog.shtml`
- `layouts/devlog.xml`
- `layouts/devlog-archive.shtml`
- `layouts/templates/base.shtml`

**If you're running the Zine development server (by running `zine`), then all
changes you make will be picked up immediately, causing the website to rebuild
and the page in your browser to refresh**.

You can learn more about SuperMD and SuperHTML in [/about/](/about/).

Lastly, this sample website also includes the following asset files:

- `assets/style.css`
- `assets/hightlight.css`
- `assets/under-construction.gif`
- `assets/katex-tag.js`
- `assets/katex0.16.21.css`
- `assets/katex0.16.21.js`
- `content/blog/first-post/fanzine.jpg`

The first few asset files are **site assets**, while the last is a **page asset** that belongs to the "first post" page.

The Zine docs contain more information about [dealing with assets](https://zine-ssg.io/docs/assets/).

